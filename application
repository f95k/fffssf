import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JTextField;

import java.awt.CardLayout;

import javax.swing.JPanel;
import javax.swing.JButton;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import javax.swing.ImageIcon;
import javax.swing.JLabel;

import java.awt.Color;

import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JPasswordField;
import javax.swing.JScrollBar;
import javax.swing.ButtonGroup;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.text.JTextComponent;
import javax.swing.JOptionPane;

import java.awt.SystemColor;

import javax.swing.JTable;
import javax.swing.JScrollPane;

import java.awt.Choice;
import java.awt.Label;
import java.awt.Font;
import java.awt.Toolkit;
import java.lang.reflect.Array;
import java.util.ArrayList;

import javax.swing.SwingConstants;
import javax.swing.JSeparator;
import javax.swing.AbstractListModel;


public class applicaiton {

	private JFrame frmSchinnBenn;
	private JPanel panelMenu;
	private JPanel panelAddC;
	private JPanel panelFindC;
	private JPanel panelAddO;
	private JPanel panelAddP;
	private JPanel panelProdutL;
	private JPanel panelOrderH;
	private JTextField textField_CName;
	private JTextField textField_CNumber;
	private JTextField textField_CPhone;
	private JTextField textField_CAdress;
	private JTextField textField_CEmail;
	private JTextField textFieldCNumber;
	private JTextField textFieldCName;
	private JTextField textFieldCTelephoneNbr;
	private JTextField textFieldCAddress;
	private JTextField textFieldCEmail;
	private JTextField textField_CNbr;
	private JTextField textField_ONumber;
	private JList list_1;
	private JList list_orders;
	private final ButtonGroup buttonGroup = new ButtonGroup();
	private Controller controller; //Koppling till klassen Controller
	private CustomerRegister customerRegister;
	private ProductRegister productRegister;
	private Order order;
	private JList showOrderList;
	private DefaultListModel<Product> pl;
	private DefaultListModel<Order> ol;
	protected JTextComponent lblRepons;
	private JTextField textField_ODiscount;
	private JTextField textField_Olines;
	private JTextField textField_PName;
	private JTextField textField_PNbr;
	private JTextField textField_PPrice;
	private JTextField textField_PContent;
	private JTextField textField_PPrepMethod;
	private JTextField textField_PWarehouse;
	private JTextField textField_findOrder;
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					applicaiton window = new applicaiton();
					window.frmSchinnBenn.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public applicaiton() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frmSchinnBenn = new JFrame();
		frmSchinnBenn.setTitle("Schinn & Benn");
		frmSchinnBenn.setBounds(100, 100, 593, 485);
		frmSchinnBenn.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frmSchinnBenn.getContentPane().setLayout(new CardLayout(0, 0));
		customerRegister = new CustomerRegister();
		productRegister = new ProductRegister();
		controller = new Controller(customerRegister, frmSchinnBenn, productRegister, order);
		
		//Panels
		
		final JPanel panelMenu = new JPanel();
		frmSchinnBenn.getContentPane().add(panelMenu, "name_1420303638010798000");
		panelMenu.setLayout(null);
		panelMenu.setVisible(true);
		
		final JPanel panelAddC = new JPanel();
		frmSchinnBenn.getContentPane().add(panelAddC, "name_1420305001653667000");
		panelAddC.setLayout(null);
		
		JLabel lblNewLabel = new JLabel("Namn:");
		lblNewLabel.setBounds(75, 46, 61, 16);
		panelAddC.add(lblNewLabel);
		
		JLabel lblKundnummer = new JLabel("Kundnummer:");
		lblKundnummer.setBounds(75, 84, 90, 16);
		panelAddC.add(lblKundnummer);
		
		JLabel lblTelefonnummer = new JLabel("Telefon:");
		lblTelefonnummer.setBounds(75, 122, 99, 16);
		panelAddC.add(lblTelefonnummer);
		
		JLabel lblAdress = new JLabel("Adress:");
		lblAdress.setBounds(75, 157, 61, 16);
		panelAddC.add(lblAdress);
		
		JLabel lblNewLabel_1 = new JLabel("Email:");
		lblNewLabel_1.setBounds(75, 192, 61, 16);
		panelAddC.add(lblNewLabel_1);
		
		textField_CName = new JTextField();
		textField_CName.setHorizontalAlignment(SwingConstants.CENTER);
		textField_CName.setBounds(196, 42, 200, 23);
		panelAddC.add(textField_CName);
		textField_CName.setColumns(10);
		
		textField_CNumber = new JTextField();
		textField_CNumber.setHorizontalAlignment(SwingConstants.CENTER);
		textField_CNumber.setColumns(10);
		textField_CNumber.setBounds(196, 80, 200, 23);
		panelAddC.add(textField_CNumber);
		
		textField_CPhone = new JTextField();
		textField_CPhone.setHorizontalAlignment(SwingConstants.CENTER);
		textField_CPhone.setColumns(10);
		textField_CPhone.setBounds(196, 118, 200, 23);
		panelAddC.add(textField_CPhone);
		
		textField_CAdress = new JTextField();
		textField_CAdress.setHorizontalAlignment(SwingConstants.CENTER);
		textField_CAdress.setColumns(10);
		textField_CAdress.setBounds(196, 153, 200, 23);
		panelAddC.add(textField_CAdress);
		
		textField_CEmail = new JTextField();
		textField_CEmail.setHorizontalAlignment(SwingConstants.CENTER);
		textField_CEmail.setColumns(10);
		textField_CEmail.setBounds(196, 188, 200, 23);
		panelAddC.add(textField_CEmail);
		panelAddC.setVisible(false);
		
		JButton btnLggTill = new JButton("Lägg Till");
		btnLggTill.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				 String CName = textField_CName.getText();
				 String CNumber = textField_CNumber.getText();
				 String cTelephoneNbr = textField_CPhone.getText();
				 String cAddress = textField_CAdress.getText();
				 String cEmail = textField_CEmail.getText();
				 if(CName.equals("")) {
					 JOptionPane.showMessageDialog(frmSchinnBenn,
							    "Ange kundens namn", "Kundnamn fattas",
							    JOptionPane.INFORMATION_MESSAGE);
				 }else if(CNumber.equals("")) {
					 JOptionPane.showMessageDialog(frmSchinnBenn,
							    "Ange ett kundnummer", "Kundnummer fattas",
							    JOptionPane.INFORMATION_MESSAGE);
					 
				 }else if(cTelephoneNbr.equals("")) {
					 JOptionPane.showMessageDialog(frmSchinnBenn,
							    "Ange kundens telefonnummer", "Telefonnummer fattas",
							    JOptionPane.INFORMATION_MESSAGE);
				 }else if(cAddress.equals("")) {	 
					 JOptionPane.showMessageDialog(frmSchinnBenn,
							    "Ange kundens adress", "Adress fattas",
							    JOptionPane.INFORMATION_MESSAGE);
				 }else if(cEmail.equals("")){
					 JOptionPane.showMessageDialog(frmSchinnBenn,
							    "Ange kundens email", "Email fattas",
							    JOptionPane.INFORMATION_MESSAGE);
				 }else{
					 if(controller.addCustomer(CNumber, CName)){
						 Customer c = controller.findCustomer(CNumber);
						 c.setCEmai(cEmail);
						 c.setCAddress(cAddress);
						 c.setCTelephoneNbr(cTelephoneNbr);
						 
						 //Reset the fields to make it easier for repeat customer adds
						 textField_CName.setText("");
						 textField_CNumber.setText("");
						 textField_CPhone.setText("");
						 textField_CAdress.setText("");
						 textField_CEmail.setText("");
						 
						 JOptionPane.showMessageDialog(frmSchinnBenn,
								    CName + " har registrerats!", "Registrering lyckad!",
								    JOptionPane.INFORMATION_MESSAGE);
					 }else JOptionPane.showMessageDialog(null, "Gick ej att lägga till!");
				 }
				 
				

	 
 
		}
		});
		buttonGroup.add(btnLggTill);
		btnLggTill.setBounds(244, 223, 117, 29);
		panelAddC.add(btnLggTill);
		
		JLabel lblLggTillndrahittaKund = new JLabel("Lägg Till Kund");
		lblLggTillndrahittaKund.setFont(new Font("Lucida Grande", Font.PLAIN, 15));
		lblLggTillndrahittaKund.setForeground(SystemColor.controlHighlight);
		lblLggTillndrahittaKund.setBounds(244, 14, 117, 16);
		panelAddC.add(lblLggTillndrahittaKund);
		
		JButton btnTillbaka = new JButton("Tillbaka");
		btnTillbaka.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				panelMenu.setVisible(true);
				panelAddC.setVisible(false);
			}
		});
		btnTillbaka.setBounds(6, 301, 107, 43);
		panelAddC.add(btnTillbaka);
		
		
		final JPanel panelFindC = new JPanel();
		frmSchinnBenn.getContentPane().add(panelFindC, "name_1420305079419830000");
		panelFindC.setLayout(null);
		
		JLabel lblAktuellaOrdrar = new JLabel("Aktuella Ordrar");
		lblAktuellaOrdrar.setForeground(SystemColor.controlHighlight);
		lblAktuellaOrdrar.setBounds(347, 16, 105, 16);
		panelFindC.add(lblAktuellaOrdrar);
		
		JButton btnTaBortOrder = new JButton("Ta Bort Order");
		btnTaBortOrder.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				 int selectedIndex = list_orders.getSelectedIndex();
				 Order o = ol.getElementAt(selectedIndex);
				 
				 Customer c = controller.findCustomer(textFieldCNumber.getText());
				 c.removeOrder(o);
				 
				 ol.remove(selectedIndex);
				 list_orders.updateUI();
				
			}
		});
			
		btnTaBortOrder.setBounds(293, 425, 117, 25);
		panelFindC.add(btnTaBortOrder);
		
		textFieldCNumber = new JTextField();
		textFieldCNumber.setHorizontalAlignment(SwingConstants.LEFT);
		textFieldCNumber.setBounds(10, 33, 152, 29);
		panelFindC.add(textFieldCNumber);
		textFieldCNumber.setColumns(10);
		
		textFieldCName = new JTextField();
		textFieldCName.setBackground(Color.LIGHT_GRAY);
		textFieldCName.setEditable(false);
		textFieldCName.setColumns(10);
		textFieldCName.setBounds(10, 84, 152, 29);
		panelFindC.add(textFieldCName);
		
		textFieldCTelephoneNbr = new JTextField();
		textFieldCTelephoneNbr.setBackground(Color.LIGHT_GRAY);
		textFieldCTelephoneNbr.setEditable(false);
		textFieldCTelephoneNbr.setColumns(10);
		textFieldCTelephoneNbr.setBounds(10, 134, 152, 29);
		panelFindC.add(textFieldCTelephoneNbr);
		
		textFieldCAddress = new JTextField();
		textFieldCAddress.setBackground(Color.LIGHT_GRAY);
		textFieldCAddress.setEditable(false);
		textFieldCAddress.setColumns(10);
		textFieldCAddress.setBounds(10, 184, 152, 29);
		panelFindC.add(textFieldCAddress);
		
		textFieldCEmail = new JTextField();
		textFieldCEmail.setBackground(Color.LIGHT_GRAY);
		textFieldCEmail.setEditable(false);
		textFieldCEmail.setColumns(10);
		textFieldCEmail.setBounds(10, 239, 152, 29);
		panelFindC.add(textFieldCEmail);
		
		JLabel lblNamn = new JLabel("Kundnummer (går ej ändra)");
		lblNamn.setBounds(10, 16, 190, 16);
		panelFindC.add(lblNamn);
		
		JLabel lblNewLabel_2 = new JLabel("Namn");
		lblNewLabel_2.setBounds(10, 66, 97, 16);
		panelFindC.add(lblNewLabel_2);
		
		JLabel lblNewLabel_3 = new JLabel("Telefon");
		lblNewLabel_3.setBounds(10, 117, 61, 16);
		panelFindC.add(lblNewLabel_3);
		
		JLabel lblNewLabel_4 = new JLabel("Adress");
		lblNewLabel_4.setBounds(10, 161, 61, 16);
		panelFindC.add(lblNewLabel_4);
		
		JLabel lblEmial = new JLabel("Email");
		lblEmial.setBounds(10, 217, 61, 16);
		panelFindC.add(lblEmial);
		
		JButton btnFindC = new JButton("Hitta Kund");
		buttonGroup.add(btnFindC);
		btnFindC.setBounds(43, 312, 152, 29);
		panelFindC.add(btnFindC);
		
		JButton btnndra = new JButton("Ändra kunduppgifter");
		btnndra.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				
				
				Customer c = controller.findCustomer(textFieldCNumber.getText());
				if(c == null){
					JOptionPane.showMessageDialog(frmSchinnBenn,
						    "Finns ingen kund att uppdatera",
						    "Ingen kund",
						    JOptionPane.WARNING_MESSAGE);
					return;
				}
				
				c.setCName(textFieldCName.getText());
				c.setCAddress(textFieldCAddress.getText());
				c.setCEmai(textFieldCEmail.getText());
				c.setCTelephoneNbr(textFieldCTelephoneNbr.getText());
				
				JOptionPane.showMessageDialog(frmSchinnBenn,
					    "Kundens information har uppdaterats",
					    "Kundinformation uppdaterat",
					    JOptionPane.INFORMATION_MESSAGE);
				
				
				
			}
		});
		btnndra.setBounds(43, 342, 152, 25);
		panelFindC.add(btnndra);
		
		JButton btnTaBort = new JButton("Ta Bort");
		btnTaBort.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				JFrame frame = new JFrame();
				String[] options = new String[2];
				options[0] = new String("Tag bort");
				options[1] = new String("Avbryt");
				int n = JOptionPane.showOptionDialog(frame.getContentPane(),"Är du säker på att du vill ta bort kunden?","Bekräfta borttagning", 0,JOptionPane.INFORMATION_MESSAGE,null,options,null);
				
				if(n == 1) return; //User had a change of mind, abort!
				
				Customer c = controller.findCustomer(textFieldCNumber.getText());
				
				if(c == null ){
					JOptionPane.showMessageDialog(frmSchinnBenn,
						    "Finns ingen kund att ta bort",
						    "Ingen kund hittades",
						    JOptionPane.WARNING_MESSAGE);
				}
				
				controller.removeCustomer(c);
				textFieldCNumber.setText("");
				clearSearchFields();
				
				JOptionPane.showMessageDialog(frmSchinnBenn,
					    "Kunden har nu tagits bort",
					    "Kund borttagen",
					    JOptionPane.INFORMATION_MESSAGE);
				
			}
		});
		btnTaBort.setBounds(43, 370, 152, 29);
		panelFindC.add(btnTaBort);
		
		JButton btnTillbaka_1 = new JButton("Tillbaka");
		btnTillbaka_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				panelFindC.setVisible(false);
				panelMenu.setVisible(true);
			}
		});
		btnTillbaka_1.setBounds(43, 421, 152, 29);
		panelFindC.add(btnTillbaka_1);
		
		JButton btnndraOrder = new JButton("Ändra order");
		btnndraOrder.setBounds(407, 425, 117, 25);
		panelFindC.add(btnndraOrder);
		
		JSeparator separator = new JSeparator();
		separator.setBounds(10, 298, 203, 12);
		panelFindC.add(separator);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 397, 203, 12);
		panelFindC.add(separator_1);
		
		JLabel lblNewLabel_7 = new JLabel("Funktioner:");
		lblNewLabel_7.setBackground(SystemColor.textInactiveText);
		lblNewLabel_7.setForeground(SystemColor.textInactiveText);
		lblNewLabel_7.setVerticalAlignment(SwingConstants.BOTTOM);
		lblNewLabel_7.setBounds(10, 284, 82, 16);
		panelFindC.add(lblNewLabel_7);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(236, 39, 321, 384);
		panelFindC.add(scrollPane);
		ol = new DefaultListModel<Order>();
		list_orders = new JList(ol);
		scrollPane.setViewportView(list_orders);
		panelFindC.setVisible(false);

		final JPanel panelAddP = new JPanel();
		frmSchinnBenn.getContentPane().add(panelAddP, "name_1420305135607310000");
		panelAddP.setLayout(null);
		
		textField_PName = new JTextField();
		textField_PName.setBounds(221, 49, 121, 21);
		panelAddP.add(textField_PName);
		textField_PName.setColumns(10);
		
		JLabel lblProduktnamn = new JLabel("Produktnamn:");
		lblProduktnamn.setBounds(59, 52, 95, 16);
		panelAddP.add(lblProduktnamn);
		
		JLabel lblNewLabel_5 = new JLabel("Lägg till produkt");
		lblNewLabel_5.setFont(new Font("Lucida Grande", Font.PLAIN, 15));
		lblNewLabel_5.setForeground(SystemColor.controlHighlight);
		lblNewLabel_5.setBackground(Color.BLUE);
		lblNewLabel_5.setBounds(221, 6, 136, 16);
		panelAddP.add(lblNewLabel_5);
		
		JLabel lblProduktnummer = new JLabel("Produktnr:");
		lblProduktnummer.setBounds(59, 97, 95, 16);
		panelAddP.add(lblProduktnummer);
		
		textField_PNbr = new JTextField();
		textField_PNbr.setColumns(10);
		textField_PNbr.setBounds(221, 94, 121, 21);
		panelAddP.add(textField_PNbr);
		
		JLabel lblProduktpris = new JLabel("Produktpris");
		lblProduktpris.setBounds(59, 144, 95, 16);
		panelAddP.add(lblProduktpris);
		
		textField_PPrice = new JTextField();
		textField_PPrice.setColumns(10);
		textField_PPrice.setBounds(221, 141, 121, 21);
		panelAddP.add(textField_PPrice);
		
		JLabel lblIngrediensdeklaration = new JLabel("Ingrediensdeklaration");
		lblIngrediensdeklaration.setBounds(61, 190, 148, 16);
		panelAddP.add(lblIngrediensdeklaration);
		
		textField_PContent = new JTextField();
		textField_PContent.setColumns(10);
		textField_PContent.setBounds(221, 187, 121, 21);
		panelAddP.add(textField_PContent);
		
		JLabel lblTillagningsmetod = new JLabel("Tillagningsmetod");
		lblTillagningsmetod.setBounds(59, 236, 128, 16);
		panelAddP.add(lblTillagningsmetod);
		
		textField_PPrepMethod = new JTextField();
		textField_PPrepMethod.setColumns(10);
		textField_PPrepMethod.setBounds(221, 233, 121, 21);
		panelAddP.add(textField_PPrepMethod);
		
		JLabel lblLagerplats = new JLabel("Lagerplats");
		lblLagerplats.setBounds(59, 288, 128, 16);
		panelAddP.add(lblLagerplats);
		
		textField_PWarehouse = new JTextField();
		textField_PWarehouse.setColumns(10);
		textField_PWarehouse.setBounds(221, 285, 121, 21);
		panelAddP.add(textField_PWarehouse);
		
		JButton btnLggTillProdukt = new JButton("Lägg till produkt");
		btnLggTillProdukt.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String pName = textField_PName.getText();
				String pNumber = textField_PNbr.getText();
				String tempPrice = textField_PPrice.getText();
				int pPrice = 0;
				
				if(tempPrice.length() != 0){
					try{
						pPrice = Integer.parseInt(tempPrice);
					}catch(Exception z){
						//If we get here price was not numerical!
						JOptionPane.showMessageDialog(frmSchinnBenn,
							    "Pris måste vara numerisk!",
							    "Fel indata",
							    JOptionPane.WARNING_MESSAGE);
						return;
					}
				}
				
				//If we get here we got price in a correct format
				if(pName.length() == 0) {
					JOptionPane.showMessageDialog(frmSchinnBenn,
						    "Produktnamn får inte vara tomt just nu",
						    "Fel indata",
						    JOptionPane.WARNING_MESSAGE);
					return;
				}else if(pNumber.length() == 0) {
					JOptionPane.showMessageDialog(frmSchinnBenn,
						    "Produktnummer får inte vara tomt just nu",
						    "Fel indata",
						    JOptionPane.WARNING_MESSAGE);
					return;
				}
				
				if(controller.product.addProduct(pNumber, pName, pPrice)){
					JOptionPane.showMessageDialog(frmSchinnBenn,
						    "Produkten har lagts till!",
						    "Produkt tillagd",
						    JOptionPane.INFORMATION_MESSAGE);
					
					textField_PName.setText("");
					textField_PNbr.setText("");
					textField_PPrice.setText("");
				}else{
					JOptionPane.showMessageDialog(frmSchinnBenn,
						    "Produkten kunde inte läggas till, försök igen",
						    "Fel inträffade",
						    JOptionPane.WARNING_MESSAGE);
				}
				
				
				
			}
		});
		btnLggTillProdukt.setBounds(211, 339, 148, 29);
		panelAddP.add(btnLggTillProdukt);
		
		JButton btnNewButton = new JButton("Tillbaka");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				panelMenu.setVisible(true);
				panelAddP.setVisible(false);
			}
		});
		btnNewButton.setBounds(0, 416, 128, 29);
		panelAddP.add(btnNewButton);
		
		JLabel label = new JLabel("");
		label.setBounds(431, 416, 121, 21);
		panelAddP.add(label);
		panelAddP.setVisible(false);
		
			
		
				final JPanel panelAddO_1 = new JPanel();
				frmSchinnBenn.getContentPane().add(panelAddO_1, "name_1420305099226321000");
				panelAddO_1.setLayout(null);
				
				JLabel lblKundnummer_1 = new JLabel("Kundnummer");
				lblKundnummer_1.setBounds(6, 40, 94, 16);
				panelAddO_1.add(lblKundnummer_1);
				
				JLabel lblOrdernummer = new JLabel("Ordernummer");
				lblOrdernummer.setBounds(6, 83, 94, 16);
				panelAddO_1.add(lblOrdernummer);
				
				textField_ONumber = new JTextField();
				textField_ONumber.setColumns(10);
				textField_ONumber.setBounds(111, 77, 134, 28);
				panelAddO_1.add(textField_ONumber);
				
				textField_CNbr = new JTextField();
				textField_CNbr.setBounds(111, 34, 134, 28);
				panelAddO_1.add(textField_CNbr);
				textField_CNbr.setColumns(10);
				
				JScrollPane scrollPane_1 = new JScrollPane();
				scrollPane_1.setBounds(276, 38, 311, 419);
				panelAddO_1.add(scrollPane_1);
				
				
				JLabel lblProdukt = new JLabel("Produkt");
				lblProdukt.setFont(new Font("Lucida Grande", Font.PLAIN, 15));
				lblProdukt.setForeground(SystemColor.controlHighlight);
				lblProdukt.setBounds(410, 10, 61, 16);
				panelAddO_1.add(lblProdukt);
				
				textField_ODiscount = new JTextField();
				textField_ODiscount.setColumns(10);
				textField_ODiscount.setBounds(111, 126, 134, 28);
				panelAddO_1.add(textField_ODiscount);
				
				JLabel lblRabatt = new JLabel("Rabatt:");
				lblRabatt.setBounds(6, 132, 61, 16);
				panelAddO_1.add(lblRabatt);
				
				textField_Olines = new JTextField();
				textField_Olines.setBounds(214, 258, 61, 16);
				panelAddO_1.add(textField_Olines);
				textField_Olines.setColumns(10);
				
				JLabel lblAntal = new JLabel("Antal:");
				lblAntal.setBounds(157, 258, 45, 16);
				panelAddO_1.add(lblAntal);
				
				JButton btnLggOrder_1 = new JButton("Lägg Order");
				btnLggOrder_1.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						String CNumber = textField_CNbr.getText();
						String ONumber = textField_ONumber.getText();
						String olines = textField_Olines.getText();
						int Olines = 0;
						
						if(olines.length() == 0){
							JOptionPane.showMessageDialog(frmSchinnBenn,
								    "Ange antal!", "Antal tomt",
								    JOptionPane.INFORMATION_MESSAGE);
							return;
						}
						
						try{
							Olines = Integer.parseInt(olines);
						}catch(Exception z){
							JOptionPane.showMessageDialog(frmSchinnBenn,
								    "Antal får endast bestå av siffor 0-9", "Fel datatyp",
								    JOptionPane.INFORMATION_MESSAGE);
							return;
						}
						
						if(CNumber.length() == 0 ) {
							 JOptionPane.showMessageDialog(frmSchinnBenn,
									    "Ange kundnummer", "Kundnummer fattas!",
									    JOptionPane.INFORMATION_MESSAGE);
							 return;
						}
						if(ONumber.length() == 0) {
							 JOptionPane.showMessageDialog(frmSchinnBenn,
									    "Ange ett ordernummer", "Ordernummer fattas",
									    JOptionPane.INFORMATION_MESSAGE);
							 return;
						 
						 }
						 
						 Customer c = controller.findCustomer(CNumber);
						 if(null == c) {
							 JOptionPane.showMessageDialog(frmSchinnBenn,
									    "Kund kunde inte hittas", "Kund fattas",
									    JOptionPane.INFORMATION_MESSAGE);
							 return;
						 }
						 
						 
						 Order order = controller.getOrder(c, ONumber);
						 
						 //Check whether an order is already made
						 if(order == null) order = new Order(ONumber, c);

						 int[] selectedIx = list_1.getSelectedIndices();
						 
						 for(int i = 0; i < selectedIx.length; i++){
							 Product p =  pl.getElementAt(i);
							 controller.addOrderline(p, new Orderline(Olines), order);
						 }
						 
						}	 
					});
					
				btnLggOrder_1.setBounds(157, 295, 117, 29);
				panelAddO_1.add(btnLggOrder_1);
				
				JButton btnTillbaka_2 = new JButton("Tillbaka");
				btnTillbaka_2.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						panelMenu.setVisible(true);
						panelAddO_1.setVisible(false);
						
					}
				});
				btnTillbaka_2.setBounds(6, 417, 117, 29);
				panelAddO_1.add(btnTillbaka_2);
				panelAddO_1.setVisible(false);

		final JPanel panelProductL = new JPanel();
		frmSchinnBenn.getContentPane().add(panelProductL, "name_1420305155435627000");
		panelProductL.setLayout(null);
		
		JScrollPane scrollPane_2 = new JScrollPane();
		scrollPane_2.setBounds(18, 26, 550, 402);
		panelProductL.add(scrollPane_2);
		
		
		pl = new DefaultListModel<Product>();
		
		JList list_2 =  new JList(pl);
		list_2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		scrollPane_2.setViewportView(list_2);
		
		list_1 = new JList(pl);
		list_1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
		scrollPane_1.setViewportView(list_1);
		
		JLabel lblProduktlista = new JLabel("Produktlista");
		lblProduktlista.setFont(new Font("Lucida Grande", Font.PLAIN, 15));
		lblProduktlista.setForeground(SystemColor.controlHighlight);
		lblProduktlista.setBounds(244, 6, 94, 16);
		panelProductL.add(lblProduktlista);
		
		JButton btnTillbaka_3 = new JButton("Tillbaka");
		btnTillbaka_3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				panelMenu.setVisible(true);
				panelProductL.setVisible(false);
			}
		});
		btnTillbaka_3.setBounds(18, 428, 117, 29);
		panelProductL.add(btnTillbaka_3);
		
		JButton btnTaBortProdukt = new JButton("Ta bort produkt");
		btnTaBortProdukt.setBounds(315, 428, 133, 29);
		panelProductL.add(btnTaBortProdukt);
		
		JButton btnndra_1 = new JButton("Ändra");
		btnndra_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				ProductListWindow plw1 = new ProductListWindow();
				plw1.productChangeScreen();
				
				int index = list_2.getSelectedIndex();
				Product p = pl.getElementAt(index);
				
				//Create set methods in plw1 to populate the popup
				//plw1.setPPrice(p.getPPrice());
				//plw1.setPNumber(p.getPNumber());
				
				
				//Create get methods to retrieve the new values and set them in the p object
				//p.setPName(plw1.getPPrice());
				//p.setPNumber(plw1.getPNumber());
				//p.setPPrice(newPPrice);
				
				//fixa rutan imorn
				
				
				
				
				
				
				
			}
		});
	
		btnndra_1.setBounds(451, 428, 117, 29);
		panelProductL.add(btnndra_1);
		panelProductL.setVisible(false);

		final JPanel panelOrderH = new JPanel();
		frmSchinnBenn.getContentPane().add(panelOrderH, "name_1420305188866890000");
		panelOrderH.setLayout(null);
		
		JScrollPane scrollPane_3 = new JScrollPane();
		scrollPane_3.setBounds(6, 23, 581, 404);
		panelOrderH.add(scrollPane_3);
		
		JList list_3 = new JList();
		list_3.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		scrollPane_3.setViewportView(list_3);
		
		JLabel lblNewLabel_6 = new JLabel("Orderhistorik");
		lblNewLabel_6.setFont(new Font("Lucida Grande", Font.PLAIN, 15));
		lblNewLabel_6.setForeground(SystemColor.controlHighlight);
		lblNewLabel_6.setBounds(259, 6, 96, 16);
		panelOrderH.add(lblNewLabel_6);
		
		JButton btnTillbaka_4 = new JButton("Tillbaka");
		btnTillbaka_4.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				panelMenu.setVisible(true);
				panelOrderH.setVisible(false);
			}
		});
		btnTillbaka_4.setBounds(0, 428, 117, 29);
		panelOrderH.add(btnTillbaka_4);
		
		textField_findOrder = new JTextField();
		textField_findOrder.setToolTipText("Ange ordernummer");
		textField_findOrder.setBounds(343, 427, 134, 28);
		panelOrderH.add(textField_findOrder);
		textField_findOrder.setColumns(10);
		
		JButton btnNewButton_1 = new JButton("Hitta order");
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String oNumber = textField_findOrder.getText();
				controller.customer.findOrder(oNumber);
				
			}
		});
		btnNewButton_1.setBounds(470, 428, 117, 29);
		panelOrderH.add(btnNewButton_1);
		panelOrderH.setVisible(false);

		//Buttons
		
		JButton btnLäggTillKund = new JButton("Lägg till kund");
		btnLäggTillKund.setIcon(new ImageIcon(applicaiton.class.getResource("/bilder12/add70.png")));
		btnLäggTillKund.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				panelAddC.setVisible(true);
				panelMenu.setVisible(false);
			}
		});
		btnLäggTillKund.setBounds(92, 18, 351, 61);
		panelMenu.add(btnLäggTillKund);
		
		JButton btnHittandraKund = new JButton("Hitta/Ändra Kund");
		btnHittandraKund.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				panelFindC.setVisible(true);
				panelMenu.setVisible(false);
			}
		});
		btnHittandraKund.setIcon(new ImageIcon(applicaiton.class.getResource("/bilder12/add203.png")));
		btnHittandraKund.setBounds(92, 91, 351, 61);
		panelMenu.add(btnHittandraKund);
		
		JButton btnLggOrder = new JButton("Lägg Order");
		btnLggOrder.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				pl.clear();
				panelAddO_1.setVisible(true);
				panelMenu.setVisible(false);
				
				ArrayList<Product> products = controller.getProducts();
				System.out.println("Antal produkter : " + products.size());
				
				if(products.size() != 0){
					for(Product p : products){
						pl.addElement(p);
					}
				}
				
				
			}
		});
		
		JButton btnProductList = new JButton("Produkt lista");
		btnProductList.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				pl.clear();
				panelProductL.setVisible(true);
				panelMenu.setVisible(false);
				
				ArrayList<Product> products = productRegister.getProducts();
				
				System.out.println("Antal produkter : " + products.size());
				
				if(products.size() != 0){
					for(Product p : products){
						pl.addElement(p);
					}
				}
				
				
				
			}
		});
		btnProductList.setIcon(new ImageIcon(applicaiton.class.getResource("/bilder12/menu21.png")));
		btnProductList.setBounds(92, 323, 351, 57);
		panelMenu.add(btnProductList);
		btnLggOrder.setIcon(new ImageIcon(applicaiton.class.getResource("/bilder12/new10.png")));
		btnLggOrder.setBounds(92, 164, 351, 61);
		panelMenu.add(btnLggOrder);
		
		JButton btnAddProduct = new JButton("Lägg till produkt");
		btnAddProduct.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				panelAddP.setVisible(true);
				panelMenu.setVisible(false);
			}
		});
		btnAddProduct.setIcon(new ImageIcon(applicaiton.class.getResource("/bilder12/add139.png")));
		btnAddProduct.setBounds(92, 237, 351, 61);
		panelMenu.add(btnAddProduct);
		
		JButton btnOrderHistory = new JButton("Orderhistorik");
		btnOrderHistory.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				panelOrderH.setVisible(true);
				panelMenu.setVisible(false);
			}
		});
		btnOrderHistory.setIcon(new ImageIcon(applicaiton.class.getResource("/bilder12/order.png")));
		btnOrderHistory.setBounds(92, 392, 351, 65);
		panelMenu.add(btnOrderHistory);
		
		
		btnFindC.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String cNumber = textFieldCNumber.getText();
				if(cNumber.length() > 0 ){
					//empty previous searches
					//showOrderList.clear();
					clearSearchFields();
					
					Customer c = controller.findCustomer(cNumber);
					
					if(c != null){
						
						ArrayList<Order> olist = c.getOrders();
						
						for(Order o : olist){
							ol.addElement(o);
						}
						
						textFieldCName.setText(c.getCName());		
						textFieldCName.setBackground(Color.WHITE);
						textFieldCName.setEditable(true);
						
					
						textFieldCEmail.setText(c.getCEmail());
						textFieldCEmail.setBackground(Color.WHITE);
						textFieldCEmail.setEditable(true);
						
						textFieldCTelephoneNbr.setText(c.getCTelephoneNbr());
						textFieldCTelephoneNbr.setBackground(Color.WHITE);
						textFieldCTelephoneNbr.setEditable(true);
						
						textFieldCAddress.setText(c.getCAddress());
						textFieldCAddress.setBackground(Color.WHITE);
						textFieldCAddress.setEditable(true);
						
					}else{
						JOptionPane.showMessageDialog(frmSchinnBenn,
							    "Finns ingen kund med kundnummer: " + cNumber,
							    "Finns ingen sådan kund",
							    JOptionPane.INFORMATION_MESSAGE);
					}
					
				}else{
					JOptionPane.showMessageDialog(frmSchinnBenn,
						    "Kundnummer får inte vara tomt just nu",
						    "Fel indata",
						    JOptionPane.WARNING_MESSAGE);
				}
				

			}
				
				
			
		});
		
	}
	
	private void clearSearchFields(){
		textFieldCName.setText("");
		textFieldCName.setBackground(Color.LIGHT_GRAY);
		textFieldCName.setEditable(false);
		
		textFieldCEmail.setText("");
		textFieldCEmail.setBackground(Color.LIGHT_GRAY);
		textFieldCEmail.setEditable(false);
		
		textFieldCTelephoneNbr.setText("");
		textFieldCTelephoneNbr.setBackground(Color.LIGHT_GRAY);
		textFieldCTelephoneNbr.setEditable(false);
		
		textFieldCAddress.setText("");
		textFieldCAddress.setBackground(Color.LIGHT_GRAY);
		textFieldCAddress.setEditable(false);
		
	}
}
